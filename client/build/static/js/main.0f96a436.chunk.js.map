{"version":3,"sources":["components/common/Button/Button.styled.js","components/common/Loader/Loader.styled.js","components/common/Loader/index.js","components/common/Loader/Loader.js","components/containers/Page/Page.styled.js","components/containers/Page/index.js","components/containers/Page/Page.js","components/containers/Wrapper/Wrapper.styled.js","components/containers/Wrapper/index.js","components/containers/Wrapper/Wrapper.js","components/pages/Auth/Login.js","components/pages/Auth/Signup.js","components/pages/Home/index.js","components/pages/Home/HomePage.js","Routes.js","components/auth/Authenticator.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["white","Color","primary","styled","button","_templateObject","props","hex","lighten","darken","rotate","keyframes","Loader_styled_templateObject","LoaderContainer","div","_templateObject2","Loader","_templateObject3","_ref","isLoading","message","_ref$children","children","react_default","a","createElement","Loader_styled_Loader","Page","Page_styled_templateObject","Page_styled_Page","Wrapper","Wrapper_styled_templateObject","fullHeight","Wrapper_styled_Wrapper","Login","console","log","containers_Page","containers_Wrapper","Signup","HomePage","Routes","isAuthenticated","authState","id","common_Loader","react_router","path","render","Home","Fragment","exact","Auth_Login","Auth_Signup","CustomAuthenticator","state","config","userIsAuthenticated","user","cognitoUser","getErrorMessage","err","onLogin","_callee","username","password","response","regenerator_default","wrap","_context","prev","next","Auth","signIn","then","challengeName","_this","setState","history","push","concat","catch","code","resendSignUp","error","sent","abrupt","stop","onLogout","_callee2","currentUser","_context2","userPool","getCurrentUser","signOut","onSignUp","_callee3","attributes","_context3","signUp","validationData","data","onForgotPassword","_callee4","_context4","forgotPassword","onResetPassword","_callee5","new_password","_context5","forgotPasswordSubmit","onNewPassword","newPassword","Promise","_ref6","Object","asyncToGenerator","mark","_callee6","resolve","_user","_context6","completeNewPassword","newPasswordContinue","t0","currentAuthenticatedUser","_x10","apply","this","arguments","_this$props","getConfig","_this2","userPoolId","userPoolWebClientId","axios","get","_ref7","_this3","_this$state","Amplify","configure","region","mandatorySignIn","authenticationFlowType","dist","onStateChange","hideDefault","React","Children","map","child","cloneElement","Component","App","react_router_dom","Authenticator","src_Routes","Boolean","window","location","hostname","match","createHistory","require","createBrowserHistory","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f96a436.chunk.js","sourcesContent":["import Color from 'color';\nimport styled from 'styled-components';\n\nconst white = Color('#fff');\nconst primary = Color('#0062ff');\n\nexport const Button = styled.button`\n  background-color: ${props => (props.primary ? primary.hex() : white.hex())};\n  padding: 0.8rem 1.6rem;\n  color: ${props => (props.primary ? white.hex() : primary.hex())};\n  border: 1px solid #ebebeb;\n  border-radius: 0.8rem;\n  transition: none;\n  box-shadow: 0 2px 3px #999;\n  &:hover {\n    background-color: ${props =>\n      props.primary ? primary.lighten(0.15).hex() : white.darken(0.15).hex()};\n  }\n  &:focus {\n    outline: 0;\n  }\n  &:active {\n    background-color: ${props => (props.primary ? primary.hex() : white.hex())};\n    box-shadow: 0 1px 2px #666;\n    transform: translateY(2px);\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from { \n    transform: rotate(0deg);\n  }\n  to { \n    transform: rotate(360deg); \n  }\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 3rem 0;\n`;\nexport const Loader = styled.div`\n  width: 32px;\n  height: 32px;\n  margin-right: 1rem;\n  display: inline-block;\n  border: 4px #003d9280 solid;\n  border-top: 4px #0062ff solid;\n  border-radius: 50%;\n  -webkit-animation: ${rotate} 0.8s infinite ease-in-out;\n  animation: ${rotate} 0.8s infinite ease-in-out;\n`;\n","import Loader from './Loader';\nexport default Loader;\n","import React from 'react';\nimport { LoaderContainer, Loader as StyledLoader } from './Loader.styled';\n\nconst Loader = ({\n  isLoading,\n  message,\n  children = <div />\n}) => {\n  if (isLoading) {\n    return (\n      <LoaderContainer>\n        <StyledLoader />\n        {message}\n      </LoaderContainer>\n    );\n  }\n  return children;\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n","import Page from './Page';\n\nexport default Page;\n","import React from 'react';\nimport { Page as StyledPage } from './Page.styled';\n\nconst Page = ({ children }) => <StyledPage>{children}</StyledPage>;\n\nexport default Page;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: ${props => (props.fullHeight ? '100%' : 'fit-content')};\n`;\n","import Wrapper from './Wrapper';\n\nexport default Wrapper;\n","import React from 'react';\nimport { Wrapper as StyledWrapper } from './Wrapper.styled';\n\nconst Wrapper = props => {\n  const { children } = props;\n  return <StyledWrapper {...props}>{children}</StyledWrapper>;\n};\n\nexport default Wrapper;\n","import React from 'react';\nimport { Page, Wrapper } from '../../containers';\nconst Login = props => {\n  console.log(props);\n  return (\n    <Page>\n      <Wrapper fullHeight>I'm the Login Page!</Wrapper>\n    </Page>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Page, Wrapper } from '../../containers';\nconst Signup = props => {\n  console.log(props);\n  return (\n    <Page>\n      <Wrapper fullHeight>I'm the Signup Page!</Wrapper>\n    </Page>\n  );\n};\n\nexport default Signup;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import React from 'react';\nimport { Page, Wrapper } from '../../containers';\nconst HomePage = props => {\n  console.log(props);\n  return (\n    <Page>\n      <Wrapper fullHeight>I'm the HomePage!</Wrapper>\n    </Page>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Loader } from './components/common';\nimport { HomePage, Login, Signup } from './components/pages';\n\nconst Routes = props => {\n  const { isAuthenticated, authState } = props;\n  return (\n    <div id=\"App\">\n      <Loader isLoading={authState === 'loading'} message=\"Logging user in...\">\n        <Switch>\n          {isAuthenticated || authState === 'signedIn' ? (\n            // These are the authenticated routes\n            <Route path=\"/\" render={() => <HomePage {...props} />} />\n          ) : (\n            // These are the unauthenticate routes\n            <>\n              <Route exact path=\"/\" render={() => <Login {...props} />} />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => <Signup {...props} />}\n              />\n              {/* <Redirect to=\"/login\" /> not sure why this isn't working */}\n            </>\n          )}\n        </Switch>\n      </Loader>\n    </div>\n  );\n};\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport Amplify, { Auth } from 'aws-amplify';\nimport { Authenticator } from 'aws-amplify-react';\n\nimport { getConfig } from '../../utils/API';\nimport { Loader } from '../common';\n\nclass CustomAuthenticator extends Component {\n  state = {\n    config: {},\n    isLoading: true,\n    userIsAuthenticated: false,\n    user: null,\n    cognitoUser: null\n  };\n\n  getErrorMessage = err => (typeof err === 'string' ? err : err.message);\n\n  onLogin = async (username, password) => {\n    const response = await Auth.signIn(username, password)\n      .then(user => {\n        console.log('user :::', user);\n        const { challengeName, username } = user;\n        if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n          this.setState({ cognitoUser: user });\n          this.props.history.push(\n            `/password_reset?user_name=${username}&new_user=1`\n          );\n        } else {\n          this.setState({ user, userIsAuthenticated: true });\n        }\n        return user;\n      })\n      .catch(err => {\n        console.log('auth.error :::', err);\n        if (err.code === 'UserNotConfirmedException') {\n          Auth.resendSignUp(username).then(() => {\n            console.log('code resent successfully');\n            const error = { code: err.code, message: err.message };\n            return { error };\n          });\n        }\n        const error = err.code\n          ? { code: err.code, message: err.message }\n          : { message: this.getErrorMessage(err) };\n        return { error };\n      });\n\n    return response;\n  };\n\n  onLogout = async () => {\n    const currentUser = Auth.userPool.getCurrentUser();\n    await currentUser.signOut();\n    this.setState({ userIsAuthenticated: false });\n  };\n\n  onSignUp = async (username, password, attributes) => {\n    const response = await Auth.signUp({\n      username,\n      password,\n      attributes,\n      validationData: [] // optional\n    })\n      .then(data => {\n        return data;\n      })\n      .catch(err => {\n        console.log(err);\n        const error = this.getErrorMessage(err);\n        return { error };\n      });\n\n    return response;\n  };\n\n  onForgotPassword = async username => {\n    let response = await Auth.forgotPassword(username)\n      .then(data => {\n        console.log(data);\n        return data;\n      })\n      .catch(err => {\n        console.log(err);\n        const error = this.getErrorMessage(err);\n        return { error };\n      });\n\n    return response;\n  };\n\n  onResetPassword = async (username, code, new_password) => {\n    // Collect confirmation code and new password, then\n    let response = await Auth.forgotPasswordSubmit(username, code, new_password)\n      .then(data => {\n        console.log(data);\n        return data;\n      }) // we don't get anything back for this\n      .catch(err => {\n        console.log(err);\n        const error = this.getErrorMessage(err);\n        return { error };\n      });\n\n    return response;\n  };\n\n  onNewPassword = newPassword => {\n    return new Promise(async resolve => {\n      try {\n        const { cognitoUser } = this.state;\n        if (!cognitoUser) {\n          this.props.history.push('/login');\n          resolve({});\n          return;\n        }\n        const user = await Auth.completeNewPassword(\n          cognitoUser, // the Cognito User Object\n          newPassword // the new password\n        );\n        this.newPasswordContinue(user);\n        resolve({});\n      } catch (error) {\n        if (error.code === 'InvalidParameterException') {\n          const user = await Auth.currentAuthenticatedUser();\n          this.newPasswordContinue(user);\n          resolve({});\n        } else {\n          console.log('new password error :::', error);\n          resolve({ error });\n        }\n      }\n    });\n  };\n\n  newPasswordContinue = user => {\n    const { getConfig, history } = this.props;\n    this.setState({ user, userIsAuthenticated: true });\n    getConfig();\n    history.push('/');\n  };\n\n  componentDidMount() {\n    const { config } = this.state;\n    if (config && !(config.userPoolId || config.userPoolWebClientId)) {\n      getConfig().then(({ data }) =>\n        this.setState({ config: data, isLoading: false })\n      );\n    }\n  }\n\n  // componentDidUpdate(prevProps, prevState, snapshot) {\n  //   const { config } = this.state;\n  //   if (config && !(config.userPoolId || config.userPoolWebClientId)) {\n  //     getConfig();\n  //   }\n  // }\n\n  render() {\n    const { config, cognitoUser, isLoading } = this.state;\n    const { userPoolId, userPoolWebClientId } = config;\n\n    !isLoading &&\n      Amplify.configure({\n        Auth: {\n          // REQUIRED only for Federated Authentication - Amazon Cognito Identity Pool ID\n          // identityPoolId: 'XX-XXXX-X:XXXXXXXX-XXXX-1234-abcd-1234567890ab',\n\n          // REQUIRED - Amazon Cognito Region\n          region: 'us-east-1',\n\n          // OPTIONAL - Amazon Cognito Federated Identity Pool Region\n          // Required only if it's different from Amazon Cognito Region\n          // identityPoolRegion: 'XX-XXXX-X',\n\n          // OPTIONAL - Amazon Cognito User Pool ID\n          userPoolId,\n\n          // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n          userPoolWebClientId,\n\n          // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\n          mandatorySignIn: false,\n\n          // OPTIONAL - Configuration for cookie storage\n          // cookieStorage: {\n          //   // REQUIRED - Cookie domain (only required if cookieStorage is provided)\n          //   domain: '.yourdomain.com',\n          //   // OPTIONAL - Cookie path\n          //   path: '/',\n          //   // OPTIONAL - Cookie expiration in days\n          //   expires: 365,\n          //   // OPTIONAL - Cookie secure flag\n          //   secure: true\n          // },\n\n          // OPTIONAL - customized storage object\n          // storage: new MyStorage(),\n\n          // OPTIONAL - Manually set the authentication flow type. Default is 'USER_SRP_AUTH'\n          authenticationFlowType: 'USER_PASSWORD_AUTH'\n        }\n      });\n\n    // your Cognito Hosted UI configuration -- for social login\n    // const oauth = {\n    //   domain: domainUrl,\n    //   scope: [\n    //     'phone',\n    //     'email',\n    //     'profile',\n    //     'openid',\n    //     'aws.cognito.signin.user.admin'\n    //   ],\n    //   redirectSignIn: redirectUrl,\n    //   redirectSignOut: redirectUrl,\n    //   responseType: 'code' // or code\n    // };\n\n    // !isLoading && Auth.configure({ oauth });\n    const { children } = this.props;\n\n    return (\n      <Loader isLoading={isLoading}>\n        <Authenticator\n          // Optionally hard-code an initial state\n          // authState=\"signIn\"\n          // Pass in an already authenticated CognitoUser or FederatedUser object\n          // authData={CognitoUser | 'username'}\n          // Fired when Authentication State changes\n          onStateChange={authState => {\n            if (authState === 'signedIn') {\n              this.setState({ userIsAuthenticated: true });\n            }\n          }}\n          // An object referencing federation and/or social providers\n          // *** Only supported on React/Web (Not React Native) ***\n          // For React Native use the API Auth.federatedSignIn()\n          // federated={federated}\n          // A theme object to override the UI / styling\n          // theme={myCustomTheme}\n          // Hide specific components within the Authenticator\n          // hide={\n          //     [\n          //         Greetings,\n          //         SignIn,\n          //         ConfirmSignIn,\n          //         RequireNewPassword,\n          //         SignUp,\n          //         ConfirmSignUp,\n          //         VerifyContact,\n          //         ForgotPassword,\n          //         TOTPSetup\n          //     ]\n          // }\n          // or hide all the default components\n          hideDefault\n          // Pass in an aws-exports configuration\n          // amplifyConfig={myAWSExports}\n          // Pass in a message map for error strings\n          // errorMessage={myMessageMap}\n        >\n          {\n            // Default components can be customized/passed in as child components.\n            // Define them here if you used hideDefault={true}\n          }\n          {React.Children.map(children, child =>\n            React.cloneElement(child, {\n              onLogin: this.onLogin,\n              onSignUp: this.onSignUp,\n              onLogout: this.onLogout,\n              isAuthenticated: this.state.userIsAuthenticated,\n              onForgotPassword: this.onForgotPassword,\n              onResetPassword: this.onResetPassword,\n              onNewPassword: this.onNewPassword,\n              cognitoUser: cognitoUser\n            })\n          )}\n        </Authenticator>\n      </Loader>\n    );\n  }\n}\n\nexport default CustomAuthenticator;\n","import axios from 'axios';\n\n// Gets cognito config\nexport const getConfig = () => {\n  return axios.get('/auth/config');\n};\n// Register User\nexport const registerUser = body => {\n  return axios.post('/auth/register', body);\n};\n// Login User\nexport const loginUser = body => {\n  return axios.post('/auth/login', body);\n};\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './Routes';\nimport Authenticator from './components/auth/Authenticator';\n\nconst App = props => {\n  const { history } = props;\n  return (\n    <Router history={history}>\n      <Authenticator>\n        <Routes />\n      </Authenticator>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nconst createHistory = require('history').createBrowserHistory;\nconst history = createHistory({});\n\nReactDOM.render(<App history={history} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}